<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEYDgPfn81ft37nH9K6OJWUX4RMZAC1yA49v79xjdofr+ovWzywAQIoA0J2C6twM8A/Kq2KdAYBk
        ACAnmwLrHPK5GeAzw7V9AYAUAmAYBdU68ucm9nryh77q2E8BgGMEgLbV9+kUWC+SvyB/bmJ/RZ4SXmXL
        aqXzBgBSA4CSI2zrbSZvJACc76sGAI4dANYzKbDePsy23mbzzPCa/OzWehsAkCIAFFNw7ckAAHwFACQV
        AG9lCACeAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAACUUHDtzQAAbEgBAGZkCADeTgEA3s4Q
        AMxIAQA2ZAAA9tL5lhgBgBEUXJvIW0zsreRab3XsvGQBwLF0JANgGnk7eYuJvY28kIL/jCQC4AwKrIXk
        beQtJvZ28rS21XnJBMB5FFy15K3kLSb2JjrfESkFQLkGgJ507G1y9/FVxXop1bFuBIFj/t6uGpcYt7xU
        2Gud5xXWOvqQe5vYfQgAFztq7Z0ctUkAQCMBoNHSiQLr4pYGWx9ybxO7T3O97bwvl14tdqzJOebvHlYI
        AG5Xt7C3uBe5D7m3mU3B39MIAMhjJthDwZ8MADhrnGL0MhcBwCEKM8B8ntz6JwUADQSABot+tJnezZSx
        bF3RTzSttSQLACLsKRYUYOY2Zyu6IQiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
        IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
        IAiCIAjqsP4fyaYyffJ9sdQAAAAASUVORK5CYII=
</value>
  </data>
</root>